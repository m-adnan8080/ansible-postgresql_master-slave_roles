---

- name: Check if database is already initialized
  stat:
    path: '/var/lib/postgresql/12/main/PG_VERSION'
  register: init_status

- name: Promote slave database to master
  become_user: postgres
  shell: "/usr/lib/postgresql/12/bin/pg_ctl promote -D /var/lib/postgresql/12/main"
  when: init_status.stat.exists == True and standby_status.stat.exists == True

- name: Create replication user, set MD5-hashed password, grant privs
  become_user: postgres
  postgresql_user:
    name: replusr
    password: "{{ 'md5' + ((repl_passwd + repl_user) | hash('md5')) }}"
    role_attr_flags: REPLICATION
    priv: ALL
    db: postgres
  
- name: Update postgresql config file
  blockinfile:
    path: /etc/postgresql/12/main/postgresql.conf
    owner: postgres
    block: |
      listen_addresses = 'localhost,{{ ansible_enp0s8.ipv4.address }}'
      wal_level = hot_standby
      archive_mode = on
      archive_command = 'cd .'
      max_wal_senders = 10
      wal_keep_segments = 100
      hot_standby = on
  notify: Restart database

- meta: flush_handlers

- name: Allow replication user in pg_hba.conf file to login 
  blockinfile:
    path: /etc/postgresql/12/main/pg_hba.conf
    owner: postgres
    block: |
      {% for host in groups['db_hosts'] %}
      host    replication     replusr     {{ hostvars[host]['ansible_facts']['enp0s8']['ipv4']['address'] }}/32    md5
      {% endfor %}
  notify: Restart database

- name: pgpass for non interactive logins to the other node
  blockinfile:
    path: /var/lib/postgresql/.pgpass
    owner: postgres
    create: yes
    mode: 0600
    block: |
      # hostname:port:database:username:password
      {% for host in groups['db_hosts'] %}
      {{ hostvars[host]['inventory_hostname'] + ':5432:replication:' + repl_user + ':' + repl_passwd}}
      {% endfor %}

- name: Restart database
  systemd:
    state: restarted
    name: postgresql
  when: init_status.stat.exists == False and standby_status.stat.exists == False

